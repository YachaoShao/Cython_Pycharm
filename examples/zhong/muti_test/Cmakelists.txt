# cmake file for mutifiles
#cmake minimum version required
cmake_minimum_required(VERSION 3.6)

# name of project
project(muti_test)

# add a header file used to dealing with cmake settings
configure_file(
	"${PROJECT_SOURCE_DIR}/config.h.in"
	"${PROJECT_BINARY_DIR}/config.h"
)

# option for using the libraries build by the author
option(USE_MYMATH
		"Use provided math implementation" ON)

# weather load MYMATH or not
if (USE_MYMATH)
	include_directories("${PROJECT_SOURCE_DIR}/power")
	add_subdirectory(power)
	set (EXTRA_LIBS ${EXTRA_LIBS} power)
endif(USE_MYMATH)

# add source directory
aux_source_directory(. DIR_SRCS)

# executable object
add_executable(use_power ${DIR_SRCS})
target_link_libraries(use_power ${EXTRA_LIBS})

install (TARGETS use_power DESTINATION bin)
install (FILES "${PROJECT_BINARY_DIR}/config.h" DESTINATION include)

# initialize testing
enable_testing()

add_test(test_run use_power 2 3)

# test the help informations
add_test(test_usage use_power)
set_tests_properties(test_usage PROPERTIES PASS_REGULAR_EXPRESSION "Usage: .* base exponent")

# test the square of 5
add_test(test_5_2 use_power 5 2)
set_tests_properties(test_5_2 PROPERTIES PASS_REGULAR_EXPRESSION "is 25")



# 定义宏来简化工作
macro(do_test arg1 arg2 result)
	add_test(test_${arg1}_${arg2} use_power ${arg1} ${arg2})
	set_tests_properties(test_${arg1}_${arg2} PROPERTIES PASS_REGULAR_EXPRESSION ${result})
endmacro(do_test)

#use macro
do_test( 2 3 "is 8")
do_test( 3 4 "is 81")

# Debug mode
set(CMAKE_BUILD_TYPE "Debug")
set(CMAKE_CXX_FLAGS_DEBUG "ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS}-O3 -Wall")
